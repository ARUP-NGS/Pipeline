<Pipeline>

<description>
	Align paired-end reads from two fastq files and remove duplicates from the resulting BAM file. 
</description>


<reference class="buffer.ReferenceFile" filename="$${Reference sequence}" />

<readsOne class="buffer.FastQFile" filename="$${First fastq file}" />
<readsTwo class="buffer.FastQFile" filename="$${Second fastq file}" />

<AlignReadsOne class="operator.bwa.BWAAligner" threads="12">
	<input>
		<reference />
		<readsOne />
	</input>
	<output >
		<readsOneSAI class="buffer.SAIFile" filename="$${prefix}.readsOne.sai" />
	</output>
</AlignReadsOne>

<AlignReadsTwo class="operator.bwa.BWAAligner" threads="12">
	<input>
		<reference />
		<readsTwo />
	</input>
	<output >
		<readsTwoSAI class="buffer.SAIFile" filename="$${prefix}.readsTwo.sai" />
	</output>
</AlignReadsTwo>

<CreateSAMFile class="operator.bwa.BWASampe" >
	<input>
		<reference />
		<readsOneSAI />
		<readsTwoSAI />
		<readsOne />
		<readsTwo />
	</input>
	<output>
		<readsSAM class="buffer.SAMFile" filename="$${prefix}.sam" />	
	</output>
</CreateSAMFile>

<ConvertSamToBam class="operator.samtools.ConvertSamBam">
	<input>
		<readsSAM />
	</input>
	<output>
		<readsBAM class="buffer.BAMFile" filename="$${prefix}.raw.bam" />
	</output>
</ConvertSamToBam>

<RemoveDuplicates class="operator.samtools.SamtoolsRemoveDuplicates" >
	<input>
		<readsBAM />
	</input>
	<output>
		<readsDeDupBAM class="buffer.BAMFile" filename="$${prefix}.dedup.bam" />
	</output>
</RemoveDuplicates>


<SortAndIndex class="operator.picard.CoordinateSort" createindex="true">
	<input>
		<readsDeDupBAM />
	</input>
	<output>
		<readsSorted class="buffer.BAMFile" filename="$${prefix}.dedup.sort.bam" />
	</output>
</SortAndIndex>
 

</Pipeline>