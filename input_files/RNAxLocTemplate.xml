
<!-- Analysis name: Lung Melanoma RNA IonTorrent xLoc -->
<!-- Analysis ID: lung.iontorrent.rna.xloc -->
<!-- Analysis description: Pipeline for RNAseq translocation with custom references -->
<Pipeline>


<fusionReference class="buffer.ReferenceFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/lungmelanoma_v4_fusions.fasta" />
<termReference class="buffer.ReferenceFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/lungmelanoma_v4_driver_terminal_ratios.fasta" />
<fusionBreakpointBed1 class="buffer.BEDFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/Breakpoints.start.bed" />
<fusionBreakpointBed2 class="buffer.BEDFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/Breakpoints.end.bed" />
<!--fusionBed class="buffer.BEDFile" filename="/yggdrasil/workspace/LungMel/sarcoma.bed" /-->
<!--KnownDBSNP class="buffer.VCFFile" filename="/yggdrasil/workspace/LungMel/dbsnp_132.b37.vcf" />
<HapMap class="buffer.VCFFile" filename="/yggdrasil/workspace/LungMel/hapmap_3.3.b37.sites.vcf" />
<Omni class="buffer.VCFFile" filename="/yggdrasil/workspace/LungMel/1000G_omni2.5.b37.sites.vcf" /-->
<reads class="buffer.FastQFile" filename="ReadDir/basename.fastq" />

<WranglerLogger class="operator.StatusLogger" />

<TrimReads class="operator.cutadapt.CutAdaptv2" cut.opts="-O 5 -m 40" adapter.seq="ATCACCGACTGCCCATAGAG">
  <input>
    <reads />
  </input>
  <output>
      <readsTrim class="buffer.FastQFile" filename="adaptercut-basename.fastq" />
  </output>
</TrimReads>


<TermIndex class="operator.bwa.BWAalnD">
  <input>
    <termReference />
    <readsTrim />
  </input>
  <output>
      <termSAI class="buffer.SAIFile" filename="WorkDir/basename.sai" />
  </output>
</TermIndex>


<!-- Alignment with given number of threads to each reference.-->
<BwaTerm class="operator.bwa.BWASamse" sample="WorkDir/basename" >
  <input>
    <termReference />
    <termSAI />
    <readsTrim />
  </input>
  <output>
    <rawTermBam class="buffer.BAMFile" filename="WorkDir/basename.rawterm.bam" /> 
  </output>
</BwaTerm>

<SortTerm class="operator.samtools.Sort" >
  <input>
    <rawTermBam />
  </input>
  <output>
      <sortTermBam class="buffer.BAMFile" filename="WorkDir/basename.sort.term.bam" />
  </output>
</SortTerm>

<!-- Indexing -->
<IndexTerm class="operator.samtools.Index">
  <input>
    <sortTermBam />
  </input>
  <output>
  </output>
</IndexTerm>

<!-- Parse BAM file into mapped and unmapped read files.-->

<SplitTerm class="operator.samtools.MapParse">
  <input>
    <sortTermBam />
  </input>
  <output>
    <mappedTermBam class="buffer.BAMFile" filename="WorkDir/basename.mapped.bam" />
    <unmappedTermBam class="buffer.BAMFile" filename="WorkDir/basename.unmapped.bam" />
  </output>
</SplitTerm>

<FracFilter class="operator.bamutils.FracAlignFilter" fraction="0.5">
  <input>
    <mappedTermBam /> 
  </input>
  <output>
    <passMappedTermBam class="buffer.BAMFile" filename="WorkDir/basename.mapped.pass.bam" />
    <failMappedTermBam class="buffer.BAMFile" filename="WorkDir/basename.mapped.fail.bam" />
  </output>
</FracFilter>

<MatchFilter class="operator.bamutils.MatchFilter" fraction="0.667">
  <input>
    <passMappedTermBam /> 
  </input>
  <output>
    <passMatchTermBam class="buffer.BAMFile" filename="WorkDir/basename.match.pass.bam" />
    <failMatchTermBam class="buffer.BAMFile" filename="WorkDir/basename.match.fail.bam" />
  </output>
</MatchFilter>

<!-- Sorting and Indexing Parsed BAM files -->
<SortTermMap class="operator.samtools.Sort">
  <input>
      <passMatchTermBam />
  </input>
  <output>
      <MTSBam class="buffer.BAMFile" filename="WorkDir/basename.MSTP.bam" />
  </output>
</SortTermMap>

<SortTermUnmapped class="operator.samtools.Sort">
  <input>
      <unmappedTermBam />
  </input>
  <output>
      <UTSBam class="buffer.BAMFile" filename="WorkDir/basename.UST.bam" />
  </output>
</SortTermUnmapped>

<IndexTermMap class="operator.samtools.Index">
  <input>
    <MTSBam />
  </input>
  <output>
  </output>
</IndexTermMap>

<IndexTermUnmapped class="operator.samtools.Index">
  <input>
    <UTSBam />
  </input>
  <output>
  </output>
</IndexTermUnmapped>

<Bam2Fastq class="operator.samtools.Bam2Fq">
  <input>
      <unmappedTermBam />
  </input>
  <output>
      <unmappedTermFastq class="buffer.FastQFile" filename="WorkDir/basename.unmapped.fastq" />
  </output>
</Bam2Fastq>

<!-- Filter out reads with length < 90bp. -->
<TrimUnmapped class="operator.cutadapt.CutAdaptv2" cut.opts="-O 5 -m 90" adapter.seq="ATCACCGACTGCCCATAGAG">
  <input>
    <unmappedTermFastq />
  </input>
  <output>
      <unmappedTermFastqTrim class="buffer.FastQFile" filename="WorkDir/basename.unmappedTerm.filtered.fastq" />
  </output>
</TrimUnmapped>

<FusionIndex class="operator.bwa.BWAalnD">
  <input>
    <fusionReference />
    <unmappedTermFastqTrim />
  </input>
  <output>
    <fusionSAI class="buffer.SAIFile" filename="WorkDir/basename.fusion.sai" />
  </output>
</FusionIndex>

<BWAFusion class="operator.bwa.BWASamse">
  <input>
    <fusionReference />
    <fusionSAI />
    <unmappedTermFastqTrim />
  </input>
  <output>
    <rawFusionBam class="buffer.BAMFile" filename="WorkDir/basename.fusion.bam" />
  </output>
</BWAFusion>

<SortFusion class="operator.samtools.Sort">
  <input>
    <rawFusionBam />
  </input>
  <output>
      <sortFusionBam class="buffer.BAMFile" filename="WorkDir/basename.fusion.sort.bam" />
  </output>
</SortFusion>

<IndexFusion class="operator.samtools.Index">
  <input>
    <sortFusionBam />
  </input>
  <output>
  </output>
</IndexFusion>

<SplitFusion class="operator.samtools.MapParse">
  <input>
    <sortFusionBam />
  </input>
  <output>
    <mappedFusionBam class="buffer.BAMFile" filename="WorkDir/basename.mapped.fusion.bam" />
    <unmappedFusionBam class="buffer.BAMFile" filename="WorkDir/basename.unmapped.fusion.bam" />
  </output>
</SplitFusion>

<FracFilterFusion class="operator.bamutils.FracAlignFilter" fraction="0.7">
  <input>
    <mappedFusionBam /> 
  </input>
  <output>
    <passMappedFusBam class="buffer.BAMFile" filename="WorkDir/basename.FusMP.bam" />
    <failMappedFusBam class="buffer.BAMFile" filename="WorkDir/basename.FusMF.bam" />
  </output>
</FracFilterFusion>

<MatchFilterFusion class="operator.bamutils.MatchFilter" fraction="0.667">
  <input>
    <passMappedFusBam /> 
  </input>
  <output>
    <passMatchFusBam class="buffer.BAMFile" filename="WorkDir/basename.FusMatchPass.bam" />
    <failMatchFusBam class="buffer.BAMFile" filename="WorkDir/basename.FusMatchFailbam" />
  </output>
</MatchFilterFusion>

<FilterBamByBed1 class="operator.bamutils.RegionFilter">
  <input>
    <passMatchFusBam />
    <fusionBreakpointBed1 />
  </input>
  <output>
      <filterFusionBam1 class="buffer.BAMFile" filename="WorkDir/basename.filter1.fusion.bam" />
  </output>
</FilterBamByBed1>

<FilterBamByBed2 class="operator.bamutils.RegionFilter">
  <input>
    <filterFusionBam1 />
    <fusionBreakpointBed2 />
  </input>
  <output>
      <filterFusionBam class="buffer.BAMFile" filename="WorkDir/basename.filter.fusion.bam" />
  </output>
</FilterBamByBed2>

<IndexFusionMapped class="operator.samtools.Index">
  <input>
    <filterFusionBam />
  </input>
  <output>
  </output>
</IndexFusionMapped>

<IndexFusionUnmapped class="operator.samtools.Index">
  <input>
    <unmappedFusionBam />
  </input>
  <output>
  </output>
</IndexFusionUnmapped>

<!-- Final step, outputting results to JSON-->
<RatioCalc class="operator.oncology.OncologyUtils">
  <input>
    <reads />
    <readsTrim />
    <unmappedTermFastq />
    <unmappedTermFastqTrim />
    <mappedTermBam />
    <unmappedTermBam />
    <mappedFusionBam />
    <unmappedFusionBam />
    <filterFusionBam />
    <passMappedTermBam />
    <passMatchTermBam />
    <passMappedFusBam />
    <passMatchFusBam />
    <fusionReference />
    <termReference />
  </input>
  <output>
      <outputJSON class="buffer.JSONBuffer" filename="WorkDir/basename.RNA_Report.json.gz" />
  </output>
</RatioCalc>

</Pipeline>
