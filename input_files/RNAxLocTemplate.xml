
<!-- Analysis name: Lung Melanoma RNA IonTorrent xLoc -->
<!-- Analysis ID: lung.iontorrent.rna.xloc -->
<!-- Analysis description: Pipeline for RNAseq translocation with custom references and rescue step. Now rescuing all failed reads, not just unmapped.-->
<!-- Version: 3.4 -->
<Pipeline>

<!-- 3.3 notes: Trimmed all contig references to allow only 10 bp of primer to eliminate non-specific mapping. -->
<!-- 3.3 notes, cont.: Reference used: FullyReverseTrimmedPrimerReference.fasta -->
<!-- 3.4 notes: Added a MapQ filter to rescue step. Minimum quality: 1. -->
<fusionReference class="buffer.ReferenceFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/lungmelanoma_v4_fusions.fasta" />
<!--fusionReferenceSplit class="buffer.ReferenceFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/lungmelanoma_v4_fusions.split.fasta" /-->
<primerReference class="buffer.ReferenceFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/ExtendedR34TrimmedPRTrim5FromE13.fasta" />

<termReference class="buffer.ReferenceFile" filename="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/lungmelanoma_v4_driver_terminal_ratios.fasta" />
<reads class="buffer.FastQFile" filename="${INPUTFILE}" />

<WranglerLogger class="operator.StatusLogger" />

<TrimReads class="operator.cutadapt.CutAdaptv2" cut.opts="-O 5 -m 25" adapter.seq="ATCACCGACTGCCCATAGAG">
  <input>
    <reads />
  </input>
  <output>
      <readsTrim class="buffer.FastQFile" filename="adaptercut-${SAMPLE}.fastq" />
  </output>
</TrimReads>


<TermIndex class="operator.bwa.BWAalnD" extra.opts="-n 0.06">
  <input>
    <termReference />
    <readsTrim />
  </input>
  <output>
      <termSAI class="buffer.SAIFile" filename="${SAMPLE}.sai" />
  </output>
</TermIndex>

<!-- Alignment with given number of threads to each reference.-->
<BwaTerm class="operator.bwa.BWASamse" sample="${SAMPLE}" >
  <input>
    <termReference />
    <termSAI />
    <readsTrim />
  </input>
  <output>
    <rawTermBam class="buffer.BAMFile" filename="${SAMPLE}.rawterm.bam" /> 
  </output>
</BwaTerm>

<SortTerm class="operator.samtools.Sort" >
  <input>
    <rawTermBam />
  </input>
  <output>
      <sortTermBam class="buffer.BAMFile" filename="${SAMPLE}.sort.term.bam" />
  </output>
</SortTerm>

<!-- Indexing -->
<IndexTerm class="operator.samtools.Index">
  <input>
    <sortTermBam />
  </input>
  <output>
  </output>
</IndexTerm>

<!-- Parse BAM file into mapped and unmapped read files.-->

<SplitTerm class="operator.bamutils.MapQFilter" mapq.min="1">
  <input>
    <sortTermBam />
  </input>
  <output>
    <mappedTermBam class="buffer.BAMFile" filename="${SAMPLE}.mapped.bam" />
    <unmappedTermBam class="buffer.BAMFile" filename="${SAMPLE}.unmapped.bam" />
  </output>
</SplitTerm>

<AmpliconFilterTerm class="operator.bamutils.AmpliconCoverageFilter" bedpath="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/ampliconDesignLungMel.bed" fraction="0.5">
  <input>
    <mappedTermBam /> 
  </input>
  <output>
    <passMappedTermBam class="buffer.BAMFile" filename="${SAMPLE}.mapped.pass.bam" />
    <failMappedTermBam class="buffer.BAMFile" filename="${SAMPLE}.mapped.fail.bam" />
  </output>
</AmpliconFilterTerm>

<MatchFilter class="operator.bamutils.MatchFilter" fraction="0.667">
  <input>
    <passMappedTermBam /> 
  </input>
  <output>
    <passMatchTermBam class="buffer.BAMFile" filename="${SAMPLE}.match.pass.bam" />
    <failMatchTermBam class="buffer.BAMFile" filename="${SAMPLE}.match.fail.bam" />
  </output>
</MatchFilter>

<!-- Sorting and Indexing Parsed BAM files -->
<SortTermMap class="operator.samtools.Sort">
  <input>
      <passMatchTermBam />
  </input>
  <output>
      <MTSBam class="buffer.BAMFile" filename="${SAMPLE}.MapSortTermPass.bam" />
  </output>
</SortTermMap>

<SortTermUnmapped class="operator.samtools.Sort">
  <input>
      <unmappedTermBam />
  </input>
  <output>
      <UTSBam class="buffer.BAMFile" filename="${SAMPLE}.UnmapSortTerm.bam" />
  </output>
</SortTermUnmapped>

<IndexTermMap class="operator.samtools.Index">
  <input>
    <MTSBam />
  </input>
  <output>
  </output>
</IndexTermMap>

<IndexTermUnmapped class="operator.samtools.Index">
  <input>
    <UTSBam />
  </input>
  <output>
  </output>
</IndexTermUnmapped>

<Bam2Fastq class="operator.bedtools.Bam2Fq">
  <input>
      <unmappedTermBam />
  </input>
  <output>
      <unmappedTermFastq class="buffer.FastQFile" filename="${SAMPLE}.unmapped.fastq" />
  </output>
</Bam2Fastq>

<FusionIndex class="operator.bwa.BWAalnD">
  <input>
    <fusionReference />
    <unmappedTermFastq />
  </input>
  <output>
    <fusionSAI class="buffer.SAIFile" filename="${SAMPLE}.fusion.sai" />
  </output>
</FusionIndex>

<BWAFusion class="operator.bwa.BWASamse">
  <input>
    <fusionReference />
    <fusionSAI />
    <unmappedTermFastq />
  </input>
  <output>
    <rawFusionBam class="buffer.BAMFile" filename="${SAMPLE}.fusion.bam" />
  </output>
</BWAFusion>

<SortFusion class="operator.samtools.Sort">
  <input>
    <rawFusionBam />
  </input>
  <output>
      <sortFusionBam class="buffer.BAMFile" filename="${SAMPLE}.fusion.sort.bam" />
  </output>
</SortFusion>

<IndexFusion class="operator.samtools.Index">
  <input>
    <sortFusionBam />
  </input>
  <output>
  </output>
</IndexFusion>

<SplitFusion class="operator.bamutils.MapQFilter" mapq.min="1">
  <input>
    <sortFusionBam />
  </input>
  <output>
    <mappedFusionBam class="buffer.BAMFile" filename="${SAMPLE}.mapped.fusion.bam" />
    <unmappedFusionBam class="buffer.BAMFile" filename="${SAMPLE}.unmapped.fusion.bam" />
  </output>
</SplitFusion>

<AmpliconFilter class="operator.bamutils.AmpliconCoverageFilter" bedpath="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/ampliconDesignLungMel.bed" fraction="0.7">
  <input>
    <mappedFusionBam /> 
  </input>
  <output>
    <passMappedFusBam class="buffer.BAMFile" filename="${SAMPLE}.FusMapPass.bam" />
    <failMappedFusBam class="buffer.BAMFile" filename="${SAMPLE}.FusMapFail.bam" />
  </output>
</AmpliconFilter>

<MatchFilterFusion class="operator.bamutils.MatchFilter" fraction="0.667">
  <input>
    <passMappedFusBam /> 
  </input>
  <output>
    <passMatchFusBam class="buffer.BAMFile" filename="${SAMPLE}.FusMatchPass.bam" />
    <failMatchFusBam class="buffer.BAMFile" filename="${SAMPLE}.FusMatchFail.bam" />
  </output>
</MatchFilterFusion>

<FilterBamByBed class="operator.bamutils.BedFilter" bedpath="/yggdrasil/workspace/LungMel/lungmelanoma_v4_ref_bwa/lungMelanomaBreakpoints.bed">
  <input>
    <passMatchFusBam />
  </input>
  <output>
      <filterFusionBam class="buffer.BAMFile" filename="${SAMPLE}.bedfilter.fusion.bam" />
      <filterFusionBamFail class="buffer.BAMFile" filename="${SAMPLE}.bedfilter.fail.fusion.bam" />
  </output>
</FilterBamByBed>

<MergeFails class="operator.picard.MergeSam">
  <input>
    <unmappedFusionBam />
    <failMatchTermBam />
    <failMappedTermBam />
    <filterFusionBamFail />
    <failMatchFusBam />
    <failMappedFusBam />
	</input>
	<output>
		<mergedFailBam class="buffer.BAMFile" filename="${SAMPLE}.mergedFailed.bam" />
	</output>
</MergeFails>

<Bam2TheRescue class="operator.bedtools.Bam2Fq">
  <input>
		<mergedFailBam />
  </input>
  <output>
      <unmappedFusionFastq class="buffer.FastQFile" filename="${SAMPLE}.unmapped.fusion.fastq" />
  </output>
</Bam2TheRescue>

<TrimReads20 class="operator.fqUtils.FastxTrimmer" trim.num="20" >
  <input>
    <unmappedFusionFastq />
  </input>
  <output>
    <readsN20 class="buffer.FastQFile" filename="${SAMPLE}N20.fastq" />
  </output>
</TrimReads20>

<TrimIndex class="operator.bwa.BWAalnD" extra.opts="-k 2 -n 3">
  <input>
    <readsN20 />
    <primerReference />
  </input>
  <output>
    <readsN20SAI class="buffer.SAIFile" filename="${SAMPLE}N20.sai" />
  </output>
</TrimIndex>

<TrimAlign class="operator.bwa.BWASamse">
  <input>
    <primerReference />
    <readsN20SAI />
    <readsN20 />
  </input>
  <output>
    <rescueFusionBam class="buffer.BAMFile" filename="${SAMPLE}.fusion.rescue.bam" /> 
  </output>
</TrimAlign>

<SortRescue class="operator.samtools.Sort">
  <input>
    <rescueFusionBam />
  </input>
  <output>
    <rescueFusionBamSort class="buffer.BAMFile" filename="${SAMPLE}.fusion.rescue.sort.bam" />
  </output>
</SortRescue>

<SplitRescue class="operator.bamutils.MapFilter">
  <input>
    <rescueFusionBamSort />
  </input>
  <output>
    <mappedRescueFusionBam class="buffer.BAMFile" filename="${SAMPLE}.fusion.rescue.mapped.bam" />
    <unmappedRescueFusionBam class="buffer.BAMFile" filename="${SAMPLE}.fusion.rescue.unmapped.bam" />
  </output>
</SplitRescue>

<StrandFilter class="operator.bamutils.StrandFilter" strand="+" contig.substr="forward">
  <input>
    <mappedRescueFusionBam />
  </input>
  <output>
    <halfPassRescueBam class="buffer.BAMFile" filename="${SAMPLE}.RsqForwardPass.bam" />
    <strandFailRescueBam class="buffer.BAMFile" filename="${SAMPLE}.RsqForwardFail.bam" />
  </output>
</StrandFilter>
 
<StrandFilter2 class="operator.bamutils.StrandFilter" strand="-" contig.substr="reverse">
  <input>
    <halfPassRescueBam />
  </input>
  <output>
    <PassRescueBam class="buffer.BAMFile" filename="${SAMPLE}.RsqStrandPass.bam" />
    <FailRescueBam class="buffer.BAMFile" filename="${SAMPLE}.RsqStrandFail.bam" />
  </output>
</StrandFilter2>

<MQRescue class="operator.bamutils.MapQFilter" mapq.min="1">
  <input>
    <PassRescueBam />
  </input>
  <output>
    <mappedRescuePassBam class="buffer.BAMFile" filename="${SAMPLE}.RsqPassMap.bam" />
    <unmappedRescuePassBam class="buffer.BAMFile" filename="${SAMPLE}.RsqPassUnmap.bam" />
  </output>
</MQRescue>

<IndexRescueMap class="operator.samtools.Index">
  <input>
    <mappedRescuePassBam />
  </input>
  <output>
  </output>
</IndexRescueMap>

<IndexRescueUnmap class="operator.samtools.Index">
  <input>
    <unmappedRescueFusionBam />
  </input>
  <output>
  </output>
</IndexRescueUnmap>

<IndexFusionMapped class="operator.samtools.Index">
  <input>
    <filterFusionBam />
  </input>
  <output>
  </output>
</IndexFusionMapped>

<IndexFusionUnmapped class="operator.samtools.Index">
  <input>
    <unmappedFusionBam />
  </input>
  <output>
  </output>
</IndexFusionUnmapped>

<IndexTermBam class="operator.samtools.Index">
  <input>
    <mappedTermBam />
  </input>
  <output>
  </output>
</IndexTermBam>

<IndexTermUnmapBam class="operator.samtools.Index">
  <input>
    <unmappedTermBam />
  </input>
  <output>
  </output>
</IndexTermUnmapBam>

<IndexFusBam class="operator.samtools.Index">
  <input>
    <mappedFusionBam />
  </input>
  <output>
  </output>
</IndexFusBam>

<IndexFusUnmapBam class="operator.samtools.Index">
  <input>
    <unmappedFusionBam />
  </input>
  <output>
  </output>
</IndexFusUnmapBam>

<IndexFilterFusBam class="operator.samtools.Index">
  <input>
    <filterFusionBam />
  </input>
  <output>
  </output>
</IndexFilterFusBam>

<IndexPassMappedTermBam class="operator.samtools.Index">
  <input>
    <passMappedTermBam />
  </input>
  <output>
  </output>
</IndexPassMappedTermBam>

<IndexPassMatchTermBam class="operator.samtools.Index">
  <input>
    <passMatchTermBam />
  </input>
  <output>
  </output>
</IndexPassMatchTermBam>

<IndexPassMappedFusBam class="operator.samtools.Index">
  <input>
    <passMappedFusBam />
  </input>
  <output>
  </output>
</IndexPassMappedFusBam>

<IndexPassMatchFusBam class="operator.samtools.Index">
  <input>
    <passMatchFusBam />
  </input>
  <output>
  </output>
</IndexPassMatchFusBam>

<Cleanup class="operator.RemoveFile">
  <input>
	  <readsTrim />
	  <termSAI />
	  <rawTermBam />
	  <sortTermBam />
	  <failMappedTermBam />
	  <failMatchTermBam />
    <PassRescueBam />
    <FailRescueBam />
    <halfPassRescueBam />
    <strandFailRescueBam />
    <rescueFusionBam /> 
    <rescueFusionBamSort />
    <readsN20SAI />
    <readsN20 />
    <fusionSAI />
    <rawFusionBam />
	</input>
	<output>
	</output>
</Cleanup>

<!-- Final step, outputting results to JSON-->
<RatioCalc class="operator.oncology.OncologyUtils">
  <input>
    <reads />
    <readsTrim />
    <unmappedTermFastq />
    <unmappedFusionFastq />
    <mappedTermBam />
    <unmappedTermBam />
    <mappedFusionBam />
    <unmappedFusionBam />
    <filterFusionBam />
    <passMappedTermBam />
    <passMatchTermBam />
    <passMappedFusBam />
    <passMatchFusBam />
    <mappedRescuePassBam />
    <unmappedRescueFusionBam />
    <fusionReference />
    <termReference />
    <primerReference />
  </input>
  <output>
      <outputJSON class="buffer.JSONBuffer" filename="${SAMPLE}.RNA_Report.json.gz" />
  </output>
</RatioCalc>

</Pipeline>
